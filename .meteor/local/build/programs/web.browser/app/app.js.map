{"version":3,"sources":["meteor://ðŸ’»app/client/com.js","meteor://ðŸ’»app/client/error.js","meteor://ðŸ’»app/client/login.js","meteor://ðŸ’»app/client/post.js","meteor://ðŸ’»app/client/registration.js","meteor://ðŸ’»app/controller.js","meteor://ðŸ’»app/session.js","meteor://ðŸ’»app/users.js"],"names":["Template","add_com_template","events","event","template","preventDefault","$comment","find","value","$postId","target","dataset","id","$post","posts","fetch","$insertedObjectId","coms","insert","comment","postId","authorId","Meteor","userId","createdAt","Date","author","users","$commentCountUpdated","update","_id","$set","error_template","helpers","error_message","Session","get","errorMessage","Accounts","login_template","Router","go","$firstname","$password","loginWithPassword","err","set","message","comment_template","popup_is_open","all_post","map","post","index","cursor","$author","$allComs","likes","severalLikes","severalComments","moment","fromNow","name","username","$message","$authorId","usersWhoLiked","indexOf","$likesUpdated","push","$usersWhoLikedUpdated","header_template","current_user","user","email","emails","address","logout","undefined","add_comment_template","registration_template","all_users","toUpperCase","$email","createUser","password","IsActive","route","render","Mongo","Collection"],"mappings":"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","file":"/app.js","sourcesContent":["Template.add_com_template.events\r\n({\r\n    'click #addComment' : function (event, template){\r\n        event.preventDefault();\r\n        var $comment = template.find( '#com' ).value;\r\n        var $postId = event.target.dataset.id;\r\n        var $post = posts.find($postId).fetch()[0];\r\n        if ( $comment !== ''){\r\n            var $insertedObjectId = coms.insert({\r\n                comment : $comment,\r\n                postId : $postId,\r\n                authorId : Meteor.userId(),\r\n                createdAt: new Date(),\r\n                author: Meteor.users.find(Meteor.userId()).fetch()[0]\r\n            });\r\n            $commentCountUpdated = $post.comment + 1;\r\n            posts.update({_id : $postId},{$set:{comment: $commentCountUpdated}});\r\n            template.find( '#com' ).value = '';\r\n        }\r\n    }\r\n});","Template.error_template.helpers\r\n(\r\n    {\r\n        error_message : function ()\r\n        {\r\n            if ( Session.get('errorMessage')){\r\n                return { errorMessage : Session.get('errorMessage')};\r\n            }\r\n        }\r\n    }\r\n);","import { Template } from 'meteor/templating';\r\nimport { Accounts } from 'meteor/accounts-base'\r\nimport { Meteor } from 'meteor/meteor'\r\n\r\nTemplate.login_template.events\r\n( {\r\n    'click #registration' : function( event, template)\r\n    {\r\n        event.preventDefault();\r\n        Router.go('/registration');\r\n    },\r\n\r\n    'click #connexion' : function (event, template)\r\n    {\r\n        var $firstname = template.find( \"#firstname\" );\r\n        var $password = template.find( \"#password\" );\r\n        Meteor.loginWithPassword($firstname.value, $password.value, function(err){\r\n            if (err) {\r\n                Session.set('errorMessage', err.message );\r\n            } else {\r\n                Session.set( 'currentUserId', Meteor.userId() );\r\n                Router.go('/comment');\r\n            }\r\n        });\r\n    }\r\n});","Session.set('popup_is_open', false);\r\n\r\nTemplate.comment_template.helpers\r\n(\r\n    {\r\n        popup_is_open: function(){\r\n            return Session.get('popup_is_open');\r\n        },\r\n\r\n        all_post : function ()\r\n        {\r\n            return posts.find().map\r\n            (\r\n                function( post, index, cursor )\r\n                {\r\n                    var $author = Meteor.users.find(post.authorId).fetch()[0];\r\n                    var $allComs = coms.find({'postId':post._id}).fetch();\r\n                    return {\r\n                        message : post.message,\r\n                        postId : post._id,\r\n                        likes : post.likes,\r\n                        severalLikes : ((post.likes > 1) ? true: false),\r\n                        severalComments : ((post.comment > 1) ? true: false),\r\n                        comment : post.comment,\r\n                        createdAt : moment(post.createdAt).fromNow(),\r\n                        author : {\r\n                            name : $author.username\r\n                        },\r\n                        coms : $allComs\r\n                    };\r\n                }\r\n            );\r\n        },\r\n    }\r\n);\r\n\r\nTemplate.comment_template.events({\r\n    'click #close' : function (){\r\n        Session.set('popup_is_open', false);\r\n    },\r\n\r\n    'click #validate' : function(event, template){\r\n        event.preventDefault();\r\n        var $message = template.find( '#comment');\r\n        var $authorId = Meteor.userId();\r\n        if ($message.value !== \"\"){\r\n            posts.insert({\r\n                message: $message.value,\r\n                authorId: $authorId,\r\n                likes: 0,\r\n                usersWhoLiked :[],\r\n                comment: 0,\r\n                createdAt: new Date(),\r\n            });\r\n\r\n            $message.value = '';\r\n            Session.set('popup_is_open', false);\r\n        }\r\n    },\r\n\r\n    'click #like' : function(event){\r\n        var $postId = event.target.dataset.id;\r\n        var $post = posts.find($postId).fetch()[0];\r\n        if ( $post && $post.usersWhoLiked.indexOf(Meteor.userId() ) === -1){\r\n\r\n            var $likesUpdated = $post.likes + 1;\r\n            $post.usersWhoLiked.push( Meteor.userId() );\r\n            var $usersWhoLikedUpdated = $post.usersWhoLiked;\r\n            posts.update({_id : $postId},{$set:{likes: $likesUpdated, usersWhoLiked: $usersWhoLikedUpdated }});\r\n        }\r\n    }\r\n});\r\n\r\nTemplate.header_template.helpers\r\n(\r\n    {\r\n        current_user : function ()\r\n        {\r\n            var user = Meteor.users.find(Session.get( 'currentUserId' )).fetch()[0];\r\n            return { name : user.username, email : user.emails[0].address};\r\n\r\n        }\r\n    }\r\n);\r\n\r\nTemplate.header_template.events({\r\n    'click #logout' : function (event, template){\r\n        Meteor.logout(function(){\r\n            Session.set('currentUserId', undefined);\r\n            Router.go('/');\r\n        })\r\n    }\r\n});\r\n\r\n\r\nTemplate.add_comment_template.events({\r\n    'click #addComment' : function (){\r\n        Session.set('popup_is_open', true);\r\n    }\r\n});","import { Template } from 'meteor/templating';\nimport { Accounts } from 'meteor/accounts-base'\nimport { Meteor } from 'meteor/meteor'\n\nimport './main.html';\nSession.set('errorMessage', false);\nTemplate.registration_template.helpers\n(\n    {\n        all_users : function ()\n        {\n            return Meteor.users.find().map\n            (\n                function( user, index, cursor )\n                {\n                    return { name : user.username.toUpperCase(), email : user.emails[0].address};\n                }\n            );\n        }\n    }\n);\n\nTemplate.registration_template.events\n( {\n    'click #registration' : function( event, template )\n    {\n        event.preventDefault();\n        var $firstname = template.find( \"#firstname\" );\n        var $email = template.find( \"#email\" );\n        var $password = template.find( \"#password\" );\n\n        if( $email.value !== \"\" && $firstname.value !== \"\" ){\n\n            Accounts.createUser({\n                username: $firstname.value,\n                email: $email.value,\n                password: $password.value,\n                IsActive: 0\n            }, function(err){\n                    if (err) {\n                        Session.set('errorMessage', err.message );\n                    } else {\n                        Session.set( 'currentUserId', Meteor.userId() );\n                        Router.go('/comment');\n                    }\n            });\n        }\n    },\n    \"click #login\" : function (event, template){\n        event.preventDefault();\n        Router.go('/');\n    }\n} );","Router.route('/comment', function(){\r\n    if(!Meteor.userId()){\r\n        Router.go('/');\r\n    }else{\r\n    this.render( 'comment_template' );\r\n    }\r\n});\r\n\r\nRouter.route('/', function () {\r\n    this.render( 'login_template' );\r\n});\r\n\r\nRouter.route('/registration', function(){\r\n    this.render( 'registration_template' );\r\n})","// import { Session } from 'meteor/session'\r\n\r\n","import { Mongo } from 'meteor/mongo';\r\n\r\nposts = new Mongo.Collection(\"posts\");\r\ncoms = new Mongo.Collection(\"coms\");"]}