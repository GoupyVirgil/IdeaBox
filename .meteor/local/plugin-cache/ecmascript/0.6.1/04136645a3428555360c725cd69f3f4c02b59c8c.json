{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/templating","imported":["Template"],"specifiers":[{"kind":"named","imported":"Template","local":"Template"}]},{"source":"meteor/accounts-base","imported":["Accounts"],"specifiers":[{"kind":"named","imported":"Accounts","local":"Accounts"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"./main.html","imported":[],"specifiers":[]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/client/registration.js","filenameRelative":"/client/registration.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/registration.js.map","sourceFileName":"/client/registration.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"registration"},"ignored":false,"code":"var Template;module.import('meteor/templating',{\"Template\":function(v){Template=v}});var Accounts;module.import('meteor/accounts-base',{\"Accounts\":function(v){Accounts=v}});var Meteor;module.import('meteor/meteor',{\"Meteor\":function(v){Meteor=v}});module.import('./main.html');\n\n\n\n\nSession.set('errorMessage', false);\nTemplate.registration_template.helpers({\n    all_users: function () {\n        function all_users() {\n            return Meteor.users.find().map(function (user, index, cursor) {\n                return { name: user.username.toUpperCase(), email: user.emails[0].address };\n            });\n        }\n\n        return all_users;\n    }()\n});\n\nTemplate.registration_template.events({\n    'click #registration': function () {\n        function clickRegistration(event, template) {\n            event.preventDefault();\n            var $firstname = template.find(\"#firstname\");\n            var $email = template.find(\"#email\");\n            var $password = template.find(\"#password\");\n\n            if ($email.value !== \"\" && $firstname.value !== \"\") {\n\n                Accounts.createUser({\n                    username: $firstname.value,\n                    email: $email.value,\n                    password: $password.value,\n                    IsActive: 0\n                }, function (err) {\n                    if (err) {\n                        Session.set('errorMessage', err.message);\n                    } else {\n                        Session.set('currentUserId', Meteor.userId());\n                        Router.go('/comment');\n                    }\n                });\n            }\n        }\n\n        return clickRegistration;\n    }(),\n    \"click #login\": function () {\n        function clickLogin(event, template) {\n            event.preventDefault();\n            Router.go('/');\n        }\n\n        return clickLogin;\n    }()\n});","ast":null,"map":{"version":3,"sources":["/client/registration.js"],"names":["Template","Accounts","Meteor","Session","set","registration_template","helpers","all_users","users","find","map","user","index","cursor","name","username","toUpperCase","email","emails","address","events","event","template","preventDefault","$firstname","$email","$password","value","createUser","password","IsActive","err","message","userId","Router","go"],"mappings":"AAAA,SAASA,QAAT,QAAyB,mBAAzB;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,MAAT,QAAuB,eAAvB;;AAEA,OAAO,aAAP;AACAC,QAAQC,GAAR,CAAY,cAAZ,EAA4B,KAA5B;AACAJ,SAASK,qBAAT,CAA+BC,OAA/B,CAEI;AACIC;AAAY,6BACZ;AACI,mBAAOL,OAAOM,KAAP,CAAaC,IAAb,GAAoBC,GAApB,CAEH,UAAUC,IAAV,EAAgBC,KAAhB,EAAuBC,MAAvB,EACA;AACI,uBAAO,EAAEC,MAAOH,KAAKI,QAAL,CAAcC,WAAd,EAAT,EAAsCC,OAAQN,KAAKO,MAAL,CAAY,CAAZ,EAAeC,OAA7D,EAAP;AACH,aALE,CAAP;AAOH;;AATD;AAAA;AADJ,CAFJ;;AAgBAnB,SAASK,qBAAT,CAA+Be,MAA/B,CACE;AACE;AAAwB,mCAAUC,KAAV,EAAiBC,QAAjB,EACxB;AACID,kBAAME,cAAN;AACA,gBAAIC,aAAaF,SAASb,IAAT,CAAe,YAAf,CAAjB;AACA,gBAAIgB,SAASH,SAASb,IAAT,CAAe,QAAf,CAAb;AACA,gBAAIiB,YAAYJ,SAASb,IAAT,CAAe,WAAf,CAAhB;;AAEA,gBAAIgB,OAAOE,KAAP,KAAiB,EAAjB,IAAuBH,WAAWG,KAAX,KAAqB,EAAhD,EAAoD;;AAEhD1B,yBAAS2B,UAAT,CAAoB;AAChBb,8BAAUS,WAAWG,KADL;AAEhBV,2BAAOQ,OAAOE,KAFE;AAGhBE,8BAAUH,UAAUC,KAHJ;AAIhBG,8BAAU;AAJM,iBAApB,EAKG,UAASC,GAAT,EAAa;AACR,wBAAIA,GAAJ,EAAS;AACL5B,gCAAQC,GAAR,CAAY,cAAZ,EAA4B2B,IAAIC,OAAhC;AACH,qBAFD,MAEO;AACH7B,gCAAQC,GAAR,CAAa,eAAb,EAA8BF,OAAO+B,MAAP,EAA9B;AACAC,+BAAOC,EAAP,CAAU,UAAV;AACH;AACR,iBAZD;AAaH;AACJ;;AAvBD;AAAA,OADF;AAyBE;AAAiB,4BAAUd,KAAV,EAAiBC,QAAjB,EAA0B;AACvCD,kBAAME,cAAN;AACAW,mBAAOC,EAAP,CAAU,GAAV;AACH;;AAHD;AAAA;AAzBF,CADF","file":"/client/registration.js.map","sourcesContent":["import { Template } from 'meteor/templating';\nimport { Accounts } from 'meteor/accounts-base'\nimport { Meteor } from 'meteor/meteor'\n\nimport './main.html';\nSession.set('errorMessage', false);\nTemplate.registration_template.helpers\n(\n    {\n        all_users : function ()\n        {\n            return Meteor.users.find().map\n            (\n                function( user, index, cursor )\n                {\n                    return { name : user.username.toUpperCase(), email : user.emails[0].address};\n                }\n            );\n        }\n    }\n);\n\nTemplate.registration_template.events\n( {\n    'click #registration' : function( event, template )\n    {\n        event.preventDefault();\n        var $firstname = template.find( \"#firstname\" );\n        var $email = template.find( \"#email\" );\n        var $password = template.find( \"#password\" );\n\n        if( $email.value !== \"\" && $firstname.value !== \"\" ){\n\n            Accounts.createUser({\n                username: $firstname.value,\n                email: $email.value,\n                password: $password.value,\n                IsActive: 0\n            }, function(err){\n                    if (err) {\n                        Session.set('errorMessage', err.message );\n                    } else {\n                        Session.set( 'currentUserId', Meteor.userId() );\n                        Router.go('/comment');\n                    }\n            });\n        }\n    },\n    \"click #login\" : function (event, template){\n        event.preventDefault();\n        Router.go('/');\n    }\n} );"]},"hash":"04136645a3428555360c725cd69f3f4c02b59c8c"}
